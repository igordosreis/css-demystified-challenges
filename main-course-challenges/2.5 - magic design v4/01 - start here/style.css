/* Custom properties */

:root {
  --spacer: 1rem;

  --clr-neutral-100: #fff;
  --clr-neutral-300: #cfcfcf;
  --clr-neutral-700: #333;
  --clr-neutral-900: #171717;
  --clr-accent-400: #59e89c;
  --clr-accent-500: #00986a;

  --ff-primary: 'PT Sans', sans-serif;

  --fs-700: 2.25rem;
  --fs-600: 1.5rem;
  --fs-500: 1.25rem;
  --fs-400: 1.125rem;
  --fs-300: 0.9375rem;

  --fw-700: 700;
  --fw-400: 400;

  --box-shadow: 0 0.25em 1.5em rgba(0, 0, 0, 0.15);
}

/* reset */

*,
*::before,
*::after {
  box-sizing: border-box;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4 {
  line-height: 1.1;
}

h1,
h2,
h3,
p {
  margin: 0;
}

ul[class],
ol[class] {
  list-style: none;
  padding: 0;
}

img {
  max-width: 100%;
  height: auto;
  display: block;
}

/* Utility classes */
.flow-content > * + * {
  margin-top: var(--flow-space, var(--spacer));
}

.flow-content--large {
  --flow-space: calc(var(--spacer) * 3);
}

/* Caso fosse necessario um espaçamento menor, seria possível modificar o flow-content com a classe abaixo */
/* .flow-content--small {
  --flow-space: calc(var(--spacer) * 0.5);
} */

.container {
  padding: 0 var(--spacer);
  max-width: 70rem;
  margin: 0 auto;
}

.split {
  display: flex;
  flex-direction: column;
  /* gap: var(--spacer); */
}

.split > * + * {
  margin: calc(var(--spacer) * 3) 0 0 0;
}

/* Para manipular a variaável --gap dentro de .split, pode-se tanto criar uma classe modificadora como feito
abaixo - e adiconar essa classe modificadora nos respectivos elementos html (na div com o split que contém
o conjunto de divs com a classe testimonial - como também pode-se criar a variável --gap dentro de testimonials */
/* .split--large {
  --gap: calc(var(--spacer) * 5);
} */

@media (min-width: 40em) {
  .split {
    flex-direction: row;
    justify-content: space-between;
  }

  .split > * {
    flex-basis: 100%;
  }

  .split > * + * {
    margin: 0 0 0 var(--gap, var(--spacer));
  }
}

.a-center {
  align-items: center;
}

.shadow {
  box-shadow: var(--box-shadow);
}

/* [class*='bg-'] é um selector pega todas as classes que contém "bg-" */
[class*='bg-'] {
  color: var(--fg, red);
  background: var(--bg, purple);
}

.bg-dark {
  --fg: var(--clr-neutral-100);
  --bg: var(--clr-neutral-900);
  --accent: var(--clr-accent-400);
}

.bg-accent {
  --fg: var(--clr-neutral-900);
  --bg: var(--clr-accent-400);
  --accent: var(--clr-neutral-100);
}

.bg-light {
  --fg: var(--clr-neutral-900);
  --bg: var(--clr-neutral-100);
  --accent: var(--clr-accent-400);
}

.text-accent {
  color: var(--accent, var(--clr-accent-400));
}

.corner-square {
  position: relative;
}

.corner-square:nth-of-type(2n) {
  --accent: var(--clr-neutral-900);
}

/* Além de declarar a classe corner-square com position: relative, outra solução é criar uma utility class corner-square--large 
para usar a variável size do transform abaixo, ou então colocar a variável size dentro da classe testimonials */
.corner-square::before {
  content: '';
  display: block;
  width: 5rem;
  height: 5rem;
  background: var(--accent, var(--clr-accent-400));
  position: absolute;
  z-index: -1;
  top: -0.5rem;
  left: -0.5rem;
  /* transform: translate(var(--size, -0.5rem), var(--size, -0.5rem)); */
}

/* Além de usar a utility class abaixo, outra solução é usar o seletor .testimonial.bg-accent comentado 
no final do arquivo */
/* .corner-square--black {
  --accent: var(--clr-neutral-900);
} */

/* general styling */

body {
  font-family: var(--ff-primary);
  font-size: var(--fs-500);
  font-weight: var(--fw-400);
  line-height: 1.6;
  color: var(--clr-neutral-900);
  margin: 0;
}

/* h1,
.h1, */
h2,
.h2 {
  font-size: var(--fs-700);
  font-weight: var(--fw-700);
}

a {
  color: var(--clr-accent-500);
  text-decoration: none;
  font-weight: var(--fw-700);
}

.section-title {
  display: inline-block;
  padding: 0.25rem 0.5rem;
  font-size: var(--fs-300);
  text-transform: uppercase;
  letter-spacing: 0.1rem;
  background: var(--fg, var(--clr-neutral-900));
  color: var(--accent, var(--clr-accent-400));
}

.btn {
  display: inline-block;
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: 0.1rem;
  font-weight: 700;
  font-size: 1.125rem;
  color: inherit;
  padding: 0.75em 1.5em;
  background-color: var(--accent, var(--clr-accent-400));
  color: var(--fg, var(--clr-neutral-900));
}

/* navigation */

header {
  padding: var(--spacer) 0;
}

@media (min-width: 40em) {
  header {
    position: sticky;
    z-index: 1000;
    top: 0;
  }
}

.logo {
  max-width: 3rem;
}

.nav-list {
  display: flex;
  justify-content: center;
  gap: 2em;
}

.nav-list a {
  font-size: 1rem;
  text-decoration: none;
  color: var(--clr-neutral-100);
  text-transform: uppercase;
  letter-spacing: 3px;
}

.nav-list a:hover {
  color: var(--clr-accent-400);
}

/* general layout */
section {
  padding: 4.125rem 0;
}

@media (min-width: 40em) {
  section {
    padding: 8.125rem 0;
  }
}

/* individual sections */

.hero {
  --gap: calc(var(--spacer) * 4);
}

.hero img {
  transform: translateY(2em);
}

.hero__intro {
  font-weight: var(--fw-400);
}

@media (min-width: 40em) {
  .hero {
    padding: 0;
  }
}

.cta {
  background-size: cover;
  background-blend-mode: multiply;
  text-align: center;
}

.cta.bg-accent {
  background-image: url(assets/cta-bg-1.jpg);
}

.cta.bg-light {
  background-image: url(assets/cta-bg-2.jpg);
}

.testimonials {
  --gap: calc(var(--spacer) * 5);
  /* --size: -3.2rem; */

  text-align: center;
}

.testimonial {
  padding: calc(var(--spacer) * 2);
  text-align: left;
  line-height: 1.5;
}

.testimonial p:first-of-type {
  font-style: italic;
}

.testimonial .name {
  font-weight: var(--fw-700);
  margin-top: calc(var(--spacer) * 3);
  color: var(--accent);
}

.testimonial.bg-accent {
  --accent: var(--clr-neutral-900);
}
